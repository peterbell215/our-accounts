<%# Use form_with for the entire row %>
<% url = transaction.persisted? ? account_transaction_path(@account, transaction) : account_transactions_path(@account) %>
<%= form_with model: [@account, transaction],
              url: url, # Explicitly set the URL
              id: dom_id(transaction, transaction.persisted? ? nil : 'new'),
              html: { class: "div-table-row transaction-row" },
              data: { controller: "dateinlocale" } do |f| %>

  <% transaction_presenter = TransactionPresenter.new(transaction, self, @categories, @account) %>

  <%# Date Column - Use date_field %>
  <div class="div-table-col" data-date="<%= transaction.date&.iso8601 || Date.current.iso8601 %>" data-dateinlocale-target="date">
    <% if transaction.persisted? %>
      <%# Display formatted date if persisted %>
      <span><%= transaction.date.strftime("%d/%m/%Y") %></span>
    <% else %>
      <%= f.date_field :date, value: (transaction.date || Date.current).strftime("%Y-%m-%d"), class: "pure-input-1" %>
    <% end %>

    <%# Display formatted date if persisted, maybe handled by dateinlocale or add logic here %>
    <%# Example: <%#= transaction.persisted? ? transaction.date.strftime("%d/%m/%Y") : f.date_field(...) %>
    <%# For simplicity, always show the field for now, dateinlocale can format display %>
  </div>

  <%# Description Column - Conditional display %>
  <div class="div-table-col">
    <% if transaction.persisted? %>
      <span><%= transaction.description %></span>
    <% else %>
      <%= f.text_field :description, class: "pure-input-1" %>
    <% end %>
  </div>

  <%# Category Column - Use select %>
  <div class="div-table-col">
    <div class="category-select"> <%# Keep styling class if needed %>
      <%= f.select :category_id,
                   options_from_collection_for_select(@categories, :id, :name, transaction.category_id),
                   { include_blank: true },
                   { class: "pure-input-1" } %>
    </div>
  </div>

  <%# Other Party Column - Placeholder %>
  <div class="div-table-col">
    Other Party <%# Placeholder - Add field if needed: f.text_field :other_party %>
  </div>

  <%# Amount Column - Conditional display %>
  <div class="div-table-col currency <%= transaction.amount_pence&.positive? ? 'positive' : 'negative' %>">
    <% if transaction.persisted? %>
      <%# Display formatted amount if persisted %>
      <span><%= humanized_money_with_symbol transaction.amount %></span>
    <% else %>
      <%# Display number field if new %>
      <%= f.number_field :amount, step: "0.01", value: humanized_money(transaction.amount, symbol: false), class: "pure-input-1-2" %>
    <% end %>
  </div>

  <%# Balance Column - Display only %>
  <div class="div-table-col currency <%= transaction.balance_pence&.positive? ? 'positive' : 'negative' %>">
    <%= humanized_money_with_symbol transaction&.balance %>
  </div>

  <%# Actions Column - Use submit button and add delete button %>
  <div class="div-table-col actions-col"> <%# Added a class for potential styling %>
    <%# Show Save button only for new/editing rows within the form %>
    <%# Replace text with Material Icon 'check' %>
    <%= f.button type: :submit, class: "pure-button pure-button-primary pure-button-small" do %>
      <i class="material-icons">check</i> <%# Save Icon %>
    <% end %>

    <%# Delete button - Placed outside the form but in the same cell for persisted records %>
    <% if transaction.persisted? %>
      <%= button_to "Delete",
                    account_transaction_path(@account, transaction),
                    method: :delete,
                    class: "pure-button pure-button-error pure-button-small",
                    form_class: "delete-button-form", # Add a class to the form for styling if needed
                    data: { turbo_confirm: "Are you sure you want to delete this transaction?" } %>
    <% end %>
  </div>
<% end %> <%# End of form_with %>
